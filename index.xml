<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>urushiyamaのさまつごと</title>
    <link>https://urushiyama.github.io/</link>
    <description>Recent content on urushiyamaのさまつごと</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2018-2019 urushiyama | Powered by [Hugo](https://gohugo.io) with [HUCORE](https://themes.gohugo.io/hucore/) theme.</copyright>
    <lastBuildDate>Mon, 30 Apr 2018 02:48:19 +0900</lastBuildDate>
    
	<atom:link href="https://urushiyama.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BarCounter</title>
      <link>https://urushiyama.github.io/projects/barcounter/</link>
      <pubDate>Sun, 19 May 2019 04:53:06 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/barcounter/</guid>
      <description>「〇〇文字以内で回答しなさい」，「〇〇文字以上記述しなさい」，「概要は〇〇文字以内で」．．． 私たちの書く文章は，しばしば文字数で縛られる対象</description>
    </item>
    
    <item>
      <title>MJ65 Buildguide</title>
      <link>https://urushiyama.github.io/projects/mj65/buildguide/</link>
      <pubDate>Mon, 29 Apr 2019 09:02:10 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/mj65/buildguide/</guid>
      <description>目次 HAHAHUGOSHORTCODE-TOC0-HBHB 選択肢 バックプレートの選択 MJ65は，使用するキーキャップのステップの有無を考慮して，角度のついたバックプレートと角度のつかないバック</description>
    </item>
    
    <item>
      <title>MJ65 Layout</title>
      <link>https://urushiyama.github.io/projects/mj65/layout/</link>
      <pubDate>Mon, 29 Apr 2019 09:02:10 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/mj65/layout/</guid>
      <description>目次 HAHAHUGOSHORTCODE-TOC0-HBHB MJ65のレイアウトおよびキーマップ MJ65は異なるフットプリントを用いることにより6つのレイアウトをサポートしています． *理想的な*</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://urushiyama.github.io/projects/serialbuddy/privacy-policy/</link>
      <pubDate>Sat, 27 Apr 2019 22:26:36 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/serialbuddy/privacy-policy/</guid>
      <description>SerialBuddy プライバシーポリシー 漆山裕太（以下，開発者）は，SerialBuddyアプリ（以下，本アプリ）を商用アプリとして開発しました． このアプリは</description>
    </item>
    
    <item>
      <title>Acknowledgements</title>
      <link>https://urushiyama.github.io/projects/serialbuddy/acknowledgements/</link>
      <pubDate>Sat, 27 Apr 2019 22:26:20 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/serialbuddy/acknowledgements/</guid>
      <description>SerialBuddyは以下のサードパーティ製ライブラリによって支えられています． オープンソースコミュニティのあらゆる貢献に対して感謝の意を</description>
    </item>
    
    <item>
      <title>Support</title>
      <link>https://urushiyama.github.io/projects/serialbuddy/support/</link>
      <pubDate>Sat, 27 Apr 2019 20:15:50 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/serialbuddy/support/</guid>
      <description>コメントにはアプリ名を合わせてご記入ください． アプリに関する匿名での質問，意見，要望などはこちらで受け付けています： https://marshmallow-qa.com/yurushiyama?utm_medium=url_text&amp;amp;utm_source=promotion あるいは，Twitte</description>
    </item>
    
    <item>
      <title>SerialBuddy</title>
      <link>https://urushiyama.github.io/projects/serialbuddy/</link>
      <pubDate>Sat, 27 Apr 2019 19:44:32 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/serialbuddy/</guid>
      <description>Macでマイコンボードの開発につかうシリアル通信．どんな方法でデバッグしていますか？ cuやscreenコマンドを叩いたり，マイコンボードの開</description>
    </item>
    
    <item>
      <title>Front Matterに基づいてHugoのコンテンツ（ページ）を抽出する</title>
      <link>https://urushiyama.github.io/posts/hugo-extract-contents-according-to-front-matter/</link>
      <pubDate>Sat, 30 Mar 2019 21:10:01 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/hugo-extract-contents-according-to-front-matter/</guid>
      <description>&lt;p&gt;先日Webページの論文リストを更新し，「査読付き/査読なし」，「国際/国内」，といったカテゴリ別に分けてリスト表示する機能を追加した．
その際に，各ページのFront Matterに記載したカテゴリ情報をもとにページを抽出する方法を見つけたので，備忘録を残しておく．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Design of Eyes-Free Kana Entry Method Utilizing Single Stroke for Mobile Devices</title>
      <link>https://urushiyama.github.io/publications/peer-reviewed-international-poster/asianchi2019/</link>
      <pubDate>Fri, 29 Mar 2019 09:30:00 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/publications/peer-reviewed-international-poster/asianchi2019/</guid>
      <description>Accepted  ABSTRACT TBD</description>
    </item>
    
    <item>
      <title>MJ65: the Keyboard of Mac JIS-layout Lovers, by Mac JIS-layout Lovers, for Mac JIS-layout Lovers.</title>
      <link>https://urushiyama.github.io/projects/mj65/</link>
      <pubDate>Mon, 11 Mar 2019 02:02:08 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/projects/mj65/</guid>
      <description>&lt;p&gt;MJ65は某🍎のJISキーボードに対するリスペクトとして設計した自作キーボードです．&lt;/p&gt;

&lt;p&gt;ざっくり以下の特長を持ちます：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cherry MX互換，Alps互換，Kailh Chocスイッチに対応&lt;/li&gt;
&lt;li&gt;JIS配列を始めとして，分割スペース，USライクな配列をサポート&lt;/li&gt;
&lt;li&gt;オープンソース&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>指の軌跡に基づくモバイル端末向けアイズフリーかな文字入力の提案（HCI181）</title>
      <link>https://urushiyama.github.io/publications/non-peer-reviewed-domestic-oral/hci181/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/publications/non-peer-reviewed-domestic-oral/hci181/</guid>
      <description>概要 アイズフリー文字入力は，周囲に視覚的注意が必要とされる状況において，モバイル端末のスクリーンへの視認を不要にするため，有用である．しかし</description>
    </item>
    
    <item>
      <title>指の軌跡に基づく手元の視認が不要なスマートフォン向けかな文字入力手法（WISS2018）</title>
      <link>https://urushiyama.github.io/publications/non-peer-reviewed-domestic-poster/wiss2018proceedings/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/publications/non-peer-reviewed-domestic-poster/wiss2018proceedings/</guid>
      <description>概要 手元を見ずにスマートフォンによる文字入力が行えれば，ユーザは歩行中あるいは会話中にスマートフォンにてメモを取ることができる．しかし，視覚</description>
    </item>
    
    <item>
      <title>新規作成したApple IDでApple Developer Programに登録する際に2ファクタ認証を突破する方法</title>
      <link>https://urushiyama.github.io/posts/pass-two-factor-authentication-with-new-apple-id-to-enroll-apple-developer-program/</link>
      <pubDate>Sun, 02 Sep 2018 01:59:52 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/pass-two-factor-authentication-with-new-apple-id-to-enroll-apple-developer-program/</guid>
      <description>&lt;p&gt;Apple Developer Programに登録する際に，普段使っているApple IDとは別に，開発用のApple IDを新規作成して登録を行いたい，という需要がある．
しかし，2018年9月現在，Apple Developer Programに登録するためのApple IDは2ファクタ認証を有効化している必要がある．
普段使っているAppleデバイスのアカウントに紐付いていない新規作成したApple IDを2ファクタ認証するためには，少々テクニックめいた手順が必要になる．
本記事では，その手順を紹介する．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Apple Watchアプリでプログラムによるページ遷移を行う2つの方法</title>
      <link>https://urushiyama.github.io/posts/2-ways-to-programmatically-change-page-on-apple-watch-app/</link>
      <pubDate>Thu, 02 Aug 2018 19:31:24 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/2-ways-to-programmatically-change-page-on-apple-watch-app/</guid>
      <description>&lt;p&gt;Apple Watchアプリを作成するとき，next pageを用いてViewを複数のページに渡って配置することができる．その際に，あるViewから別のViewへプログラムによりページ遷移したい場合がある．本稿では，プログラムによりページ遷移を行う方法を2つ紹介する．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>プライバシーポリシー</title>
      <link>https://urushiyama.github.io/privacy-policy/</link>
      <pubDate>Sun, 20 May 2018 21:13:59 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/privacy-policy/</guid>
      <description>目次 HAHAHUGOSHORTCODE-TOC0-HBHB 個人情報の利用目的 当サイトでは，メールでのお問い合わせなどの際に，名前（ハンドルネーム），メールアドレス等の個人情報をご入力いただく場</description>
    </item>
    
    <item>
      <title>ライセンス</title>
      <link>https://urushiyama.github.io/license/</link>
      <pubDate>Sun, 20 May 2018 21:13:59 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/license/</guid>
      <description>ライセンスの適用 当サイト上に存在する，文章・画像・動画等の著作権は，特に記載のない限り，当サイトの管理人（urushiyama）が保持します</description>
    </item>
    
    <item>
      <title>ゲームコントローラで操作できるiOSカスタムキーボードをつくろうと（して挫折）した話</title>
      <link>https://urushiyama.github.io/posts/try-ios-game-controller-custom-keyboard/</link>
      <pubDate>Sun, 13 May 2018 20:23:00 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/try-ios-game-controller-custom-keyboard/</guid>
      <description>&lt;p&gt;iOSでMFiコントローラにより操作可能なカスタムキーボードの作成を試みた．&lt;/p&gt;

&lt;p&gt;結果としてはうまくいかず挫折したが，作成時にハマった点を2つ述べる．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BibTeXの罠</title>
      <link>https://urushiyama.github.io/posts/bibtex-data-order/</link>
      <pubDate>Mon, 07 May 2018 01:46:00 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/bibtex-data-order/</guid>
      <description>&lt;p&gt;BibTeX形式の引用は多くのデジタルライブラリで提供されており，サクッと引用をつけるのに便利である．しかし，使用するにあたってひとつハマった点がある．&lt;/p&gt;

&lt;h2 id=&#34;データ項目の記載の有無とデータ項目の表記順&#34;&gt;データ項目の記載の有無とデータ項目の表記順&lt;/h2&gt;

&lt;p&gt;そのハマった点というのは，書誌情報にデータ項目を記入するか否かでデータ項目の表記順が変わる点である．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>東方風神録をParallels Desktop 13&#43;SteelSeries Nimbusコントローラで操作する</title>
      <link>https://urushiyama.github.io/posts/play-touhou-with-nimbus/</link>
      <pubDate>Sat, 05 May 2018 13:12:28 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/play-touhou-with-nimbus/</guid>
      <description>&lt;p&gt;PC用のコントローラといえばPS4コントローラやUSB接続のHIDコントローラを用いることが一般的だが，
iOS用に購入したMFiコントローラを使い道が少ない為に放置していたので，Macとペアリングして活用できないだろうか，
と思った次第である．&lt;/p&gt;

&lt;p&gt;はじめに要約すると，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parallels Desktop 13で東方風神録は問題なく動作する&lt;/li&gt;
&lt;li&gt;SteelSeries NimbusコントローラはMacとBluetooth接続可能&lt;/li&gt;
&lt;li&gt;ただしプロトコルが特殊なのでキーマッピングアプリケーションが別途必要&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下に動作手順の詳細を述べる．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoのエスケープ処理</title>
      <link>https://urushiyama.github.io/posts/escape-sequence/</link>
      <pubDate>Mon, 30 Apr 2018 07:09:32 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/escape-sequence/</guid>
      <description>&lt;p&gt;山カッコ (&amp;lt;&amp;gt;)，アンパサンド (&amp;amp;)，クォーテーション (&amp;ldquo;)，&amp;hellip;HTMLの世界にはエスケープすべき文字があり，Hugoは何も指定がなければ自動的にこれらの文字をエスケープして出力する．エスケープしないことを明示するために&lt;code&gt;safeHTML&lt;/code&gt;や&lt;code&gt;safeURL&lt;/code&gt;といったフィルタが用意されているものの，実際にジェネレータがエスケープするかどうかは文脈から判断する仕様であり，Template埋め込み位置によって記述を変える必要があるので，わかりづらい．そこで，Hugoのエスケープ処理について調べてみた．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My First Post with Hugo</title>
      <link>https://urushiyama.github.io/posts/my-first-post/</link>
      <pubDate>Mon, 30 Apr 2018 02:37:25 +0900</pubDate>
      
      <guid>https://urushiyama.github.io/posts/my-first-post/</guid>
      <description>&lt;p&gt;研究室への配属が決まり，ポートフォリオ兼ブログがあると便利かな，と思うようになった．無料でホストでき，Githubのプロジェクトページが同一ドメインになるGithub Pagesでホストすることが好ましいと考え，静的サイト構築フレームワークを吟味した．&amp;rdquo;The world&amp;rsquo;s fastest&amp;rdquo;という言葉に惹かれ，&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;で静的サイトを構築することにした．&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>